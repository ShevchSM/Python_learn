####################################################################################################
# 1. Дано целое число (int). Определить сколько нулей в этом числе.

my_numbers_01 = 564611303086540560406500630460640
my_str_01 = str(my_numbers_01)
print("|1|", my_str_01.count("0"))

####################################################################################################
# 2. Дано целое число (int). Определить сколько нулей в конце этого числа. Например для числа 1002000 - три нуля.

my_numbers_02 = 1002000
my_str_02 = str(my_numbers_02)
len_str_02 = len(my_str_02) - len(str(int(my_str_02[::-1])))
print("|2|", len_str_02)

# new_numbers_02 = 0
# while not my_numbers_02 % 10:
#     my_numbers_02 = my_numbers_02 / 10
#     new_numbers_02 += 1
# print("|2|", new_numbers_02)

####################################################################################################
# 3. Даны списки my_list_1 и my_list_2. Создать список my_result в который вначале поместить
# элементы на четных местах из my_list_1, а потом все элементы на нечетных местах из my_list_2.

my_list_031 = [0, 1, 2, 3, 4]
my_list_032 = [5, 6, 7, 8, 9]
result_03 = my_list_031[::2] + my_list_031[1::2]
print("|3|", result_03)

####################################################################################################
# 4. Дан список my_list. СОЗДАТЬ НОВЫЙ список new_list у которого первый элемент из my_list
# стоит на последнем месте. Если my_list [1,2,3,4], то new_list [2,3,4,1]

my_list_04 = [1, 2, 3, 4]
new_list_04 = my_list_04[1::] + my_list_04[0:1]
print("|4|", new_list_04)

####################################################################################################
# 5.Дан список my_list. В ЭТОМ списке первый элемент переставить на последнее место.
# [1,2,3,4] -> [2,3,4,1]. Пересоздавать список нельзя! (используйте метод pop).

my_list_05 = [1, 2, 3, 4]
print("|5|", my_list_05, id(my_list_05))
my_list_05.append(my_list_05.copy()[0])
my_list_05.remove(my_list_05[0])
print("|5|", my_list_05, id(my_list_05))

####################################################################################################
# 6. Дана строка в которой есть числа (разделяются пробелами).
# Например "43 больше чем 34 но меньше чем 56". Найти сумму ВСЕХ ЧИСЕЛ (А НЕ ЦИФР) в этой строке.
# Для данного примера ответ - 133. (используйте split и проверку isdigit)

my_str_06 = "43 больше чем 34 но меньше чем 56"
result_06 = 0
list_str_06 = my_str_06.split()
for index_06 in range(len(list_str_06)):
    if list_str_06[index_06].isdigit():
        result_06 += int(list_str_06[index_06])
print("|6|", result_06)

####################################################################################################
# 7. Дана строка my_str в которой символы МОГУТ повторяться и два символа l_limit, r_limit,
# которые точно находятся в этой строке. Причем l_limit левее чем r_limit.
# В переменную sub_str поместить НАИБОЛЬШУЮ часть строки между этими символами.
# my_str = "My long string", l_limit = "o", r_limit = "g" -> sub_str = "ng strin".

my_str_07 = "My long string"
# my_str_07 = "My long string ||| My long string"
l_limit_07 = "o"
r_limit_07 = "g"
min_07 = my_str_07.find(l_limit_07)
max_07 = my_str_07.rfind(r_limit_07)
sub_str_07 = my_str_07[min_07:max_07]
print("|7|", sub_str_07)

####################################################################################################
# 8. Дана строка my_str. Разделите эту строку на пары из двух символов и поместите эти пары в список.
# Если строка содержит нечетное количество символов, пропущенный второй символ последней пары должен
# быть заменен подчеркиванием ('_'). Примеры: 'abcd' -> ['ab', 'cd'], 'abcde' -> ['ab', 'cd', e_']
# (используйте срезы длинны 2)

my_str_08 = 'abcde'
list_str_08 = [my_str_08[index_08:index_08+2] for index_08 in range(len(my_str_08)) if not index_08 % 2]
if len(list_str_08[-1]) == 1:
    list_str_08[-1] += "_"
print("|8|", list_str_08)

####################################################################################################
# 9. Дан список чисел. Определите, сколько в этом списке элементов,
# которые больше суммы двух своих соседей (слева и справа), и НАПЕЧАТАЙТЕ КОЛИЧЕСТВО таких элементов.
# Крайние элементы списка никогда не учитываются, поскольку у них недостаточно соседей.
# Для списка [2,4,1,5,3,9,0,7] ответом будет 3 потому что 4 > 2+1, 5 > 1+3, 9>3+0.

my_int_09 = [2, 4, 1, 5, 3, 9, 0, 7]
result_09 = 0
for index_09 in range(len(my_int_09)):
    if index_09 > 1:
        if my_int_09[index_09 - 1] > (my_int_09[index_09] + my_int_09[index_09 - 2]):
            result_09 += 1
print("|9|", result_09)

